unit FSesizari;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, Grids, DBGrids, DB, DBTables, ToolWin, ComCtrls, Buttons,
  StdCtrls;

type
  TSesizari = class(TForm)
    Query: TQuery;
    DS: TDataSource;
    DBGrid: TDBGrid;
    PTools: TPanel;
    PBottom: TPanel;
    Btn_Adauga: TSpeedButton;
    Btn_Modifica: TSpeedButton;
    Btn_Sterge: TSpeedButton;
    Btn_Refresh: TSpeedButton;
    Btn_Rezolvare: TSpeedButton;
    ECauta: TEdit;
    CRezolvate: TCheckBox;
    CPublic: TCheckBox;
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure DBGridDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure FormShow(Sender: TObject);
    procedure DBGridDblClick(Sender: TObject);
    procedure DBGridKeyPress(Sender: TObject; var Key: Char);
    procedure FormKeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure ECautaKeyPress(Sender: TObject; var Key: Char);
    procedure ECautaExit(Sender: TObject);
    procedure SetFilter;
    procedure CRezolvateClick(Sender: TObject);
    procedure CPublicClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    function Start(Aux: string): integer;
  end;

const
  Codes64 = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/';

var
  Sesizari: TSesizari;
  Widths: string;
  Options: string;
  Where: string;

implementation

uses Sesiz_Detail, FMain;

{$R *.dfm}

procedure TSesizari.CPublicClick(Sender: TObject);
begin
  SetFilter;
end;

procedure TSesizari.CRezolvateClick(Sender: TObject);
begin
  SetFilter;
end;

procedure TSesizari.DBGridDblClick(Sender: TObject);
begin
  SesizDetail.Start(DBGrid.Fields[0].AsString, 'M');
  SesizDetail.ShowModal;
  SesizDetail.Free;
  Query.SQL.Text :=
    'SELECT ROW_ID, DATA_POST, DATA_PROG, ORA_PROG, TEXT, UPPER(UTILIZATOR), UPPER(UTILIZATOR_POST), ' +
      'PUBLIC, CODFUR, UPPER(DENFUR), TEXT_REZOLVAT, UPPER(BIFAT_DE), BIFAT_OK ' +
    'FROM FDSOFT.AGENDA_MNG ' + Where + ' ORDER BY DATA_PROG DESC';
  Query.Open;
end;

function Decode64(S: string): string;
var
  i: Integer;
  a: Integer;
  x: Integer;
  b: Integer;
begin
  Result := '';
  a := 0;
  b := 0;
  for i := 1 to Length(s) do
  begin
    x := Pos(s[i], codes64) - 1;
    if x >= 0 then
    begin
      b := b * 64 + x;
      a := a + 6;
      if a >= 8 then
      begin
        a := a - 8;
        x := b shr a;
        b := b mod (1 shl a);
        x := x mod 256;
        Result := Result + chr(x);
      end;
    end
    else
      Exit;
  end;
end;

function Base64Decode(const Text : ansiString): ansiString;
var
  Decoder : TIdDecoderMime;
begin
  Decoder := TIdDecoderMime.Create(nil);
  try
    Result := Decoder.DecodeString(Text);
  finally
    FreeAndNil(Decoder)
  end
end;

procedure TSesizari.DBGridDrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
var
  ARect: TRect;
  S: string;
begin
  ARect := Rect;
  if Rect.Top = 0 then Exit;
  //S := StringReplace(Column.Field.Text, ',', #13, [rfReplaceAll]);
  S := Column.Field.AsString;
  if Column.Index = 4 then
    S := Decode64(S);
  S := StringReplace(S, '<ghilimele>', '"', [rfReplaceAll]);
  S := StringReplace(S, '<steluta>', '*', [rfReplaceAll]);
  S := StringReplace(S, '<char13><char10>', ';', [rfReplaceAll]);
  S := StringReplace(S, '||APS||', '''', [rfReplaceAll]);
  if DBGrid.Fields[6].AsString = StringReplace(UpperCase(Copy(UMail, 1, Pos('@', UMail) - 1)), 'TEO', 'TEODORA', [rfReplaceAll]) then
    DBGrid.Canvas.Brush.Color := iContract;
  if gdSelected in State then begin
    (Sender as TDBGrid).Canvas.Brush.Color := PozCur;
  end;
  (Sender as TDBGrid).Canvas.FillRect(Rect);
  ARect.Left := Rect.Left + 2;
  if Column.Index < 3 then
    DrawText((Sender as TDBGrid).Canvas.Handle, PChar(S), Length(S), ARect, 2);
  if (Column.Index > 2) and (Column.Index < 5) then
    DrawText((Sender as TDBGrid).Canvas.Handle, PChar(S), Length(S), ARect, 0);
  if (Column.Index > 4) then
    DrawText((Sender as TDBGrid).Canvas.Handle, PChar(S), Length(S), ARect, 1);
end;

procedure TSesizari.DBGridKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then DBGridDblClick(Sender);
end;

procedure TSesizari.ECautaExit(Sender: TObject);
begin
  ECauta.Visible := False;
  ECauta.Tag := 0;
end;

procedure TSesizari.ECautaKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then begin DBGrid.SetFocus; Exit; end
  else
    Query.Locate('UPPER(DENFUR)', ECauta.Text + Key, [loCaseInsensitive, loPartialKey])
end;

procedure TSesizari.FormActivate(Sender: TObject);
var
  I: integer;
  Temp: integer;
begin
 { Temp := 0;
  for I := 0 to 7 do
    Temp := Temp + DBGrid.Columns[I].Width;
  for I := 0 to 7 do
    DBGrid.Columns[I].Width := Round((DBGrid.Width - 28) * DBGrid.Columns[I].Width / Temp); }
end;

procedure TSesizari.FormKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #27 then Close;
end;

procedure TSesizari.SetFilter;
begin
  Where := 'WHERE (1=1) ';
  if not CRezolvate.Checked then Where := Where + ' AND (BIFAT_OK <> "DA")';
  if not CPublic.Checked then Where := Where + ' AND ((PUBLIC = "DA") OR ((UPPER(UTILIZATOR) IN ("' +
    StringReplace(UpperCase(Copy(UMail, 1, Pos('@', UMail) - 1)), 'TEO', 'TEODORA', [rfReplaceAll]) + '", "TOTI")) OR ' +
    ' (UPPER(UTILIZATOR_POST) ="' + StringReplace(UpperCase(Copy(UMail, 1, Pos('@', UMail) - 1)), 'TEO', 'TEODORA', [rfReplaceAll]) + '")))';
  Query.SQL.Text :=
      'SELECT ROW_ID, DATA_POST, DATA_PROG, ORA_PROG, TEXT, UPPER(UTILIZATOR), UPPER(UTILIZATOR_POST), ' +
        'PUBLIC, CODFUR, UPPER(DENFUR), TEXT_REZOLVAT, UPPER(BIFAT_DE), BIFAT_OK ' +
      'FROM FDSOFT.AGENDA_MNG ' + Where + ' ORDER BY DATA_PROG DESC';
  Query.Open;
end;

procedure TSesizari.FormKeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  Temp: string;
begin
//  SetFilter;
  if (Key = VK_F4) and (not (ssAlt in Shift)) then begin
    SesizDetail.Start(DBGrid.Fields[0].AsString, 'A');
    SesizDetail.ShowModal;
    SesizDetail.Free;
    Query.SQL.Text :=
      'SELECT ROW_ID, DATA_POST, DATA_PROG, ORA_PROG, TEXT, UPPER(UTILIZATOR), UPPER(UTILIZATOR_POST), ' +
        'PUBLIC, CODFUR, UPPER(DENFUR), TEXT_REZOLVAT, UPPER(BIFAT_DE), BIFAT_OK ' +
      'FROM FDSOFT.AGENDA_MNG ' + Where + ' ORDER BY DATA_PROG DESC';
    Query.Open;
  end;
  if Key = VK_F5 then begin
    Query.SQL.Text :=
      'SELECT ROW_ID, DATA_POST, DATA_PROG, ORA_PROG, TEXT, UPPER(UTILIZATOR), UPPER(UTILIZATOR_POST), ' +
        'PUBLIC, CODFUR, UPPER(DENFUR), TEXT_REZOLVAT, UPPER(BIFAT_DE), BIFAT_OK ' +
      'FROM FDSOFT.AGENDA_MNG ' + Where + ' ORDER BY DATA_PROG DESC';
    Query.Open;                //WHERE BIFAT_OK <> "DA"
  end;
  if Key = VK_F6 then begin
    DBGridDblClick(Self);
    Query.SQL.Text :=
      'SELECT ROW_ID, DATA_POST, DATA_PROG, ORA_PROG, TEXT, UPPER(UTILIZATOR), UPPER(UTILIZATOR_POST), ' +
        'PUBLIC, CODFUR, UPPER(DENFUR), TEXT_REZOLVAT, UPPER(BIFAT_DE), BIFAT_OK ' +
      'FROM FDSOFT.AGENDA_MNG ' + Where + ' ORDER BY DATA_PROG DESC';
    Query.Open;
  end;
  if Key = VK_F7 then begin
    with ECauta do begin
      Visible := True;
      Tag := 112;
      Text := '';
      Query.Locate('UPPER(DENFUR)', ECauta.Text, [loCaseInsensitive, loPartialKey]);
      SetFocus;
      SelStart := 2;
    end;
  end;
  Temp := Query.Fields[0].AsString;
  if Key = VK_DELETE then
    if MessageDlg('Esti sigur ca vrei asta?', mtWarning, mbYesNo, 0) = mrYes then begin
      Query.SQL.Text :=
        'DELETE FROM FDSOFT.AGENDA_MNG WHERE ROW_ID = ' + Temp;
      Query.ExecSQL;
      {Query.SQL.Text :=
        'DELETE FROM FCOMUN.REZOLVARI WHERE SESIZARE = ' + Temp;
      Query.ExecSQL;    }
      Query.SQL.Text :=
        'SELECT ROW_ID, DATA_POST, DATA_PROG, ORA_PROG, TEXT, UPPER(UTILIZATOR), UPPER(UTILIZATOR_POST), ' +
          'PUBLIC, CODFUR, UPPER(DENFUR), TEXT_REZOLVAT, UPPER(BIFAT_DE), BIFAT_OK ' +
        'FROM FDSOFT.AGENDA_MNG ' + Where + ' ORDER BY DATA_PROG DESC';
      Query.Open;
    end;
end;

procedure TSesizari.FormShow(Sender: TObject);
begin
  //  Query.SQL.Text :=
  //    'SELECT * FROM FCOMUN.PROBLEME WHERE REZOLVAT <> "DA" ORDER BY DATAPROG ASC';
  SetFilter;
  Query.SQL.Text :=
    'SELECT ROW_ID, DATA_POST, DATA_PROG, ORA_PROG, TEXT, UPPER(UTILIZATOR), UPPER(UTILIZATOR_POST), ' +
      'PUBLIC, CODFUR, UPPER(DENFUR), TEXT_REZOLVAT, UPPER(BIFAT_DE), BIFAT_OK ' +
    'FROM FDSOFT.AGENDA_MNG ' + Where + ' ORDER BY DATA_PROG DESC';
  Query.Open;
  DBGrid.Columns[5].Width := 64;
  DBGrid.Columns[6].Width := 64;
  Color := MainForm.Color;
end;

function TSesizari.Start(Aux: string): integer;
begin
  Sesizari := TSesizari.Create(Application);
  Options := Aux;
  Sesizari.ShowModal;
  Sesizari.Free;
end;

end.
